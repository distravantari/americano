<div class="flex flex-col items-center justify-center px-6 pt-8 mx-auto pt:mt-0 dark:bg-gray-900">
    <h1 class="mb-3 text-2xl font-bold leading-tight text-gray-900 sm:text-4xl lg:text-5xl dark:text-white">Americano</h1>
    <p class="mb-5 text-base font-normal text-gray-500 md:text-lg dark:text-gray-400">by OHT <a href="#" class="text-primary-700 hover:underline dark:text-primary-500">contact us</a>.</p>
    <!-- Card -->
    <div class="w-full max-w-xl p-6 space-y-8 sm:p-8 bg-white rounded-lg shadow dark:bg-gray-800">
        <form id="generateForm" class="mt-8 space-y-6" action="/generate" method="POST" >
            <div>
                <label for="text" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Game Name</label>
                <input type="text" name="gameName" id="gameName" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="OHT - Americano" required>
            </div>

            <div class="grid grid-cols-6 gap-2">

                <div class="col-span-6 sm:col-span-3">
                    <label for="settings-max" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Games Of</label>
                    <select id="settings-max" name="gameof" class="bg-gray-50 border-gray-300 text-gray-900 sm:text-sm rounded-lg w-full focus:ring-primary-500 focus:border-primary-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
                        <option>4</option>
                        <option>6</option>
                    </select>
                </div>

                <div class="col-span-6 sm:col-span-3">
                    <label for="settings-tiebreak" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Tie Break</label>
                    <select id="settings-tiebreak" name="tiebreak" class="bg-gray-50 border-gray-300 text-gray-900 sm:text-sm rounded-lg w-full focus:ring-primary-500 focus:border-primary-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
                        <option>Yes</option>
                        <option>No</option>
                    </select>
                </div>
            </div>

            <div>
                <label for="Number-players" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Players</label>
                <select id="Number-players" name="NumberOfPlayers" class="bg-gray-50 border-gray-300 text-gray-900 sm:text-sm rounded-lg w-full focus:ring-primary-500 focus:border-primary-500 block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500">
                    <option value="4">4</option>
                    <option value="5">5</option>
                    <option value="6">6</option>
                    <option value="7">7</option>
                    <option value="8">8</option>
                </select>
            </div>

            <div class="grid grid-cols-6 gap-2" id="input-player-name"></div>

            <br>
            <div class="flex items-center space-x-4">
                <a href="/">
                    <button type="button" class="py-2 px-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700">
                        Cancel
                    </button>
                </a>
                
                <input type="password" name="password" id="password" placeholder="sst.. don't let anyone see it" class="bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" required>

                <button id="generateButton" type="Submit" value="Submit" class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">
                    Generate
                </button>
                
            </div>
        </form>
    </div>
    <br><br> 
</div>


<div class="sticky bottom-0 right-0 items-center w-full p-4 bg-white border-t border-gray-200 sm:flex sm:justify-between dark:bg-gray-800 dark:border-gray-700">
    <div class="flex items-center mb-4 sm:mb-0">
        <a href="#" class="inline-flex justify-center p-1 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white">
            <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>
        </a>
        <a href="#" class="inline-flex justify-center p-1 mr-2 text-gray-500 rounded cursor-pointer hover:text-gray-900 hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white">
            <svg class="w-7 h-7" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
        </a>
        <!-- <span class="text-sm font-normal text-gray-500 dark:text-gray-400">Showing <span class="font-semibold text-gray-900 dark:text-white">1-20</span> of <span class="font-semibold text-gray-900 dark:text-white">2290</span></span> -->
    </div>
    <div class="flex items-center space-x-3">
        <a href="#" class="inline-flex items-center justify-center flex-1 px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">
            <svg class="w-5 h-5 mr-1 -ml-1"" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg>
            Previous
        </a>
        <a href="#" class="inline-flex items-center justify-center flex-1 px-3 py-2 text-sm font-medium text-center text-white rounded-lg bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">
            Next
            <svg class="w-5 h-5 ml-1 -mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg>
        </a>
    </div>
</div>




<script>

    // Get the select dropdown element
    const selectElement = document.getElementById('Number-players');
    const inputFieldsContainer = document.getElementById('input-player-name');

    Generate(4);

    selectElement.addEventListener('change', function(event) {
        // Get the selected option value
        const tempNumberOfPlayers = parseInt(selectElement.value);
        // Clear the existing input fields
        inputFieldsContainer.innerHTML = '';
        // Generate input fields based on the selected number of players
        Generate(tempNumberOfPlayers);
    });

    function Generate(players) {
        for (let i = 0; i < players; i++) {
            // Create an input field element
            const inputField = document.createElement('input');
            inputField.type = 'text';
            inputField.name = `player-name-${i}`;
            inputField.id = `player-name-${i}`;
            inputField.className = 'col-span-6 sm:col-span-3 shadow-sm bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500';
            inputField.placeholder = `Player ${i+1}`;
            inputField.style = "margin-bottom: 1em;";
            inputField.required = true;
            
            // Append the input field to the container
            inputFieldsContainer.appendChild(inputField);
        }
    }
</script>

<script>

    function extractValuesByKeySubstring(obj, substring) {
        const values = [];

        for (const key in obj) {
            if (key.includes(substring)) {
                values.push(obj[key]);
            }
        }

        return values;
    }

    document.getElementById('generateForm').addEventListener('submit', async function(event) {
    // Prevent the default form submission behavior
    event.preventDefault();

    // Get the form data
    const formData = new FormData(this);
    const matchData = Object.fromEntries(formData);
    const playerNames = extractValuesByKeySubstring(matchData, "player-name");
    matchData.playerNames = playerNames;

    try {
        console.log('Form data:',matchData);
        localStorage.setItem('matchData', JSON.stringify(matchData));
        const jsonData = localStorage.getItem('matchData');
        // Parse the JSON string back into a JavaScript object
        const dataMatch = JSON.parse(jsonData);
        const queryString = new URLSearchParams(dataMatch).toString();
        
        // fetch(`http://localhost:3000/connect/match?${queryString}`)
        

        var domain = localStorage.getItem('domain');
        apiCall(`${domain}/connect/match?${queryString}`)
            .then(response => {
                // Check if the response is successful (status code 200)
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                // Parse the JSON response
                return response.json();
            })
            .then(match => {
                // Process the JSON data
                standings = match.data.standing;
                rounds = match.data.rounds[0];

                localStorage.setItem('matchData', JSON.stringify(match.data));
                localStorage.setItem('standings', JSON.stringify(standings));
                console.log("halooo",match.data)
                
            })
            .catch(error => {
                // Handle any errors that occur during the fetch
                console.error('Error fetching data:', error);
            });
        window.location.href = "/match";

    } catch (error) {
        // Log any errors that occur during the request
        console.error('Error submitting form:', error);
    }
});
    
</script>

